/* eslint-disable */
export default async () => {
    const t = {
        ["./domain/favories/Favories.entity"]: await import("./domain/favories/Favories.entity"),
        ["./domain/categories/Categories.entity"]: await import("./domain/categories/Categories.entity"),
        ["./domain/profiles/Profile.entity"]: await import("./domain/profiles/Profile.entity"),
        ["./domain/books/Books.entity"]: await import("./domain/books/Books.entity"),
        ["./domain/movies/Movies.entity"]: await import("./domain/movies/Movies.entity"),
        ["./domain/tasks/Tasks.entity"]: await import("./domain/tasks/Tasks.entity"),
        ["./domain/appointements/Appointment.entity"]: await import("./domain/appointements/Appointment.entity")
    };
    return { "@nestjs/swagger": { "models": [[import("./domain/movies/Movies.entity"), { "MovieEntity": { id: { required: true, type: () => Number }, title: { required: true, type: () => String }, poster: { required: true, type: () => String }, director: { required: true, type: () => String }, favories: { required: true, type: () => [t["./domain/favories/Favories.entity"].Favories] }, categories: { required: true, type: () => [t["./domain/categories/Categories.entity"].Categories] }, profiles: { required: true, type: () => [t["./domain/profiles/Profile.entity"].Profile] }, createAt: { required: true, type: () => Date }, updateAt: { required: true, type: () => Date }, deleteAt: { required: true, type: () => Date } } }], [import("./domain/categories/Categories.entity"), { "Categories": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, books: { required: true, type: () => [t["./domain/books/Books.entity"].Books] }, movies: { required: true, type: () => [t["./domain/movies/Movies.entity"].MovieEntity] } } }], [import("./domain/books/Books.entity"), { "Books": { id: { required: true, type: () => Number }, title: { required: true, type: () => Object }, author: { required: true, type: () => Object }, poster: { required: true, type: () => Object, nullable: true }, categories: { required: true, type: () => [t["./domain/categories/Categories.entity"].Categories] }, favories: { required: true, type: () => [t["./domain/favories/Favories.entity"].Favories] }, profiles: { required: true, type: () => [t["./domain/profiles/Profile.entity"].Profile] } } }], [import("./domain/favories/Favories.entity"), { "Favories": { bookId: { required: true, type: () => Number }, movieId: { required: true, type: () => Number }, profileId: { required: true, type: () => Number }, book: { required: true, type: () => t["./domain/books/Books.entity"].Books }, movie: { required: true, type: () => t["./domain/movies/Movies.entity"].MovieEntity }, profile: { required: true, type: () => t["./domain/profiles/Profile.entity"].Profile } } }], [import("./domain/tasks/Tasks.entity"), { "Tasks": { id: { required: true, type: () => Number }, title: { required: true, type: () => String }, content: { required: true, type: () => String }, dateFinish: { required: true, type: () => String }, etat: { required: true, enum: t["./domain/tasks/Tasks.entity"].Etat }, profiles: { required: true, type: () => [t["./domain/profiles/Profile.entity"].Profile] } } }], [import("./domain/profiles/Profile.entity"), { "Profile": { id: { required: true, type: () => Number }, name: { required: true, type: () => String, nullable: true }, surname: { required: true, type: () => String, nullable: true }, favories: { required: true, type: () => [t["./domain/favories/Favories.entity"].Favories] }, appointments: { required: true, type: () => [t["./domain/appointements/Appointment.entity"].Appointment] }, books: { required: true, type: () => [t["./domain/books/Books.entity"].Books] }, movies: { required: true, type: () => [t["./domain/movies/Movies.entity"].MovieEntity] }, tasks: { required: true, type: () => [t["./domain/tasks/Tasks.entity"].Tasks] } } }], [import("./domain/appointements/Appointment.entity"), { "Appointment": { id: { required: true, type: () => Number }, title: { required: true, type: () => String }, content: { required: true, type: () => String }, etat: { required: true, enum: t["./domain/appointements/Appointment.entity"].etat }, dateAppointment: { required: true, type: () => Date }, profiles: { required: true, type: () => [t["./domain/profiles/Profile.entity"].Profile] } } }], [import("./domain/Auth/User.entity"), { "User": { id: { required: true, type: () => Number }, username: { required: true, type: () => String }, password: { required: true, type: () => String }, email: { required: true, type: () => String }, role: { required: true, type: () => Object }, profile: { required: true, type: () => t["./domain/profiles/Profile.entity"].Profile } } }], [import("./application/auth/dto/auth-sign-in.dto"), { "AuthSignInDto": { id: { required: true, type: () => Number }, username: { required: true, type: () => String, minLength: 4, maxLength: 80, pattern: "/^[a-zA-Z0-9s]*$/" }, password: { required: true, type: () => String, pattern: "/^(?=.*[a-z])(?=.*[A-Z])(?=.*d)(?=.*[!@#$%^&*()_+])[A-Za-zd!@#$%^&*()_+]{8,20}$/" } } }], [import("./application/movie/dto/create-movie-application.dto"), { "CreateMovieApplicationDto": { id: { required: false, type: () => Number }, title: { required: true, type: () => String, minLength: 3, maxLength: 80 }, poster: { required: true, type: () => String, minLength: 50, maxLength: 250 }, director: { required: true, type: () => String, minLength: 3, maxLength: 80 } } }], [import("./application/movie/dto/read-movie-application.dto"), { "ReadMovieApplicationDto": { id: { required: true, type: () => Number }, title: { required: true, type: () => String, minLength: 3, maxLength: 80 }, poster: { required: true, type: () => String, minLength: 50, maxLength: 250 }, director: { required: true, type: () => String, minLength: 3, maxLength: 80 }, categories: { required: false, type: () => [t["./domain/categories/Categories.entity"].Categories] }, favories: { required: false, type: () => [t["./domain/favories/Favories.entity"].Favories] }, profiles: { required: false, type: () => [t["./domain/profiles/Profile.entity"].Profile] } } }], [import("./application/movie/dto/update-movie-application.dto"), { "UpdateMovieApplicationDto": { id: { required: true, type: () => Number }, title: { required: true, type: () => String, minLength: 3, maxLength: 80 }, poster: { required: true, type: () => String, minLength: 50, maxLength: 250 }, director: { required: true, type: () => String, minLength: 3, maxLength: 80 } } }]], "controllers": [[import("./application/auth/auth-application.controller"), { "AuthControllerApplication": { "signIn": {}, "signUp": { type: Object }, "logOut": { type: Boolean } } }], [import("./application/movie/movie-application.controller"), { "MovieApplicationController": { "handleCreateAndPublishMovie": { type: Object }, "handleFindSavedMoviesList": { type: [t["./domain/movies/Movies.entity"].MovieEntity] }, "handleFindOneSavedMovie": { type: Object }, "handleUpdateMovieDetail": { type: Object }, "handleDeleteSavedMovie": { type: Boolean } } }], [import("./application/categories/categories-application.controller"), { "CategoriesApplicationController": { "handleCreateCategoryAndPublish": { type: Object }, "handleRemoveCategorySaved": { type: Object }, "handleAddCategoryToMovieRelation": { type: Boolean }, "handleRemoveCategoryMovieSaved": { type: Boolean }, "handleFindAllCategorySaved": { type: [t["./domain/categories/Categories.entity"].Categories] } } }]] } };
};